[package]
name = "reth-node-builder"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
# reth
reth-primitives.workspace = true
reth-db = { workspace = true, features = ["mdbx"] }
reth-interfaces = { workspace = true, features = ["clap"] }
reth-provider.workspace = true
reth-rpc-types.workspace = true
reth-rpc-types-compat.workspace = true
reth-transaction-pool.workspace = true
reth-tracing.workspace = true
reth-discv4.workspace = true
reth-net-nat.workspace = true
reth-network-api.workspace = true
reth-node-api.workspace = true
reth-tasks.workspace = true
reth-payload-builder.workspace = true
reth-optimism-payload-builder = { workspace = true, optional = true }

# async
tokio.workspace = true

# metrics
once_cell.workspace = true
metrics.workspace = true
reth-metrics.workspace = true

# misc
eyre.workspace = true
clap = { workspace = true, features = ["derive"] }
thiserror.workspace = true
rand.workspace = true
pin-project.workspace = true

# io
serde.workspace = true
serde_json.workspace = true

# http/rpc
hyper = "0.14.25"

# tracing
tracing.workspace = true

# crypto
alloy-rlp.workspace = true
alloy-chains.workspace = true
secp256k1 = { workspace = true, features = ["global-context", "rand-std", "recovery"] }

# async
futures.workspace = true

[features]
optimism = [
    "reth-primitives/optimism",
    "reth-interfaces/optimism",
    "reth-transaction-pool/optimism",
    "reth-provider/optimism",
    "reth-network-api/optimism",
    "reth-payload-builder/optimism",
    "reth-rpc-types/optimism",
    "reth-rpc-types-compat/optimism",
    "reth-optimism-payload-builder/optimism",
    "reth-node-api/optimism",
]
