on:
  push:
    branches:
      - main
  pull_request:

env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: unit
jobs:
  build-tests:
    name: build tests
    # Pin to `20.04` instead of `ubuntu-latest`, until ubuntu-latest migration is complete
    # See also <https://github.com/foundry-rs/foundry/issues/3827>
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Build and archive tests
        run: |
          . <(cargo llvm-cov show-env)

          cargo nextest archive \
            --locked --workspace --all-features \
            --archive-file nextest-archive.tar.zst \
            --lib --bins
      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: nextest-archive
          path: nextest-archive.tar.zst

  test:
    # Pin to `20.04` instead of `ubuntu-latest`, until ubuntu-latest migration is complete
    # See also <https://github.com/foundry-rs/foundry/issues/3827>
    name: test (partition ${{ matrix.partition }}/${{ strategy.job-total }})
    runs-on: ubuntu-20.04
    needs: build-tests
    strategy:
      matrix:
        partition: [1, 2, 3]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      # This is needed for proc macro tests to work.
      # Normally, you would not need to install a Rust toolchain at all to run archives, but proc macro tests are
      # dynamically linked to libtest.
      #
      # See https://github.com/nextest-rs/nextest/issues/267
      - run: |
          echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$(rustc --print sysroot)/lib" >> $GITHUB_ENV

      - name: Download archive
        uses: actions/download-artifact@v3
        with:
          name: nextest-archive
      - name: Run tests
        run: |
          ~/.cargo/bin/cargo-nextest nextest run --archive-file nextest-archive.tar.zst \
            --partition hash:${{ matrix.partition }}/${{ strategy.job-total }} \
            -E 'kind(lib)' -E 'kind(bin)' -E 'kind(proc-macro)'

      - name: Generate report
        run: ~/.cargo/bin/cargo-llvm-cov llvm-cov report --lcov --output-path lcov.info
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          flags: unit-tests

  eth-blockchain:
    name: ethereum / state tests (stable)
    runs-on: ubuntu-latest
    env:
      RUST_LOG: info,sync=error
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Checkout ethereum/tests
        uses: actions/checkout@v2
        with:
          repository: ethereum/tests
          path: ethtests
          submodules: recursive

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Run Ethereum tests
        run: cargo run --release -- test-chain ethtests/BlockchainTests/GeneralStateTests/

  doc-test:
    name: rustdoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Run doctests
        run: cargo test --doc --all --all-features
